# Authors: Sorina Ionica, Pınar Kılıçer, Kristin Lauter, Elisa Lorenzo Garcia, Adelina Mânzățeanu and Christelle Vincent.

# This document contains a list of roots for the CM fields corresponding to the curves studied in "DETERMINING THE PRIMES OF BAD REDUCTION OF CM CURVES OF GENUS 3".

#--------------------------------------------------------------------------------------------------------------------------------------------------

# CM fields 1, 2 (= 22), 3 (= 33), 4, 5 (= 55, 555, 5555), 6 (= 66, 666, 6666, 66666), 7 (= 77), 8 (= 88, 888, 8888, 88888) correspond to the hyperelliptic genus 3 curves H1 - H8 in Section 7.1 of [IKLLMV].

# CM fields 9/29 (= 99/2999, 999/29999, 29), 10 (= 1010, 1011), 23 (= 233, 2333), 25 (= 255, 2555, 25555, 255555), 26 (= 266, 2666, 26666), 27 (= 277, 2777), 28 (= 288, 2888), 210 (=2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 21010, 21011), 211 (= 2112, 2113, 2114), 212 (= 2122), 217 (= 2177, 21777, 217777, 2177777) correspond to the CM non-hyperelliptic curves of genus 3 defined over the rationals X9, X1, X3, X5, X6, X8, X7, X10, X11, X12, X17, respectively in Section 7.2 of [IKLLMV]. See also Table 4 in https://arxiv.org/pdf/1803.05816.pdf and page 21 of https://arxiv.org/pdf/1701.06489.pdf

# CM fields 31 (= 311), 32, 34, 35, 36, 37, 38 (= 388), 39, 40, 41, 42 (= 422), 43, 45, 46, 47, 48 (= 488), 49, 50, 51, 52, 53, 54, 56, 57 are examples of sextic CM fields with no imaginary quadraric subfield. Some of these are presented in Section 7.3 of [IKLLMV]: G1 (32), G2 (41), G3 (43), G4 (50), G5 (54).

#--------------------------------------------------------------------------------------------------------------------------------------------------


R.<mu,eta> = QQbar[]


all_roots = {1: [mu, mu^2 - 8*mu + 16, -mu^2 + 7*mu - 3], 2: [mu, mu^2 - 4*mu + 4, -mu^2 + 3*mu + 2], 22: [mu, 7*mu^2 - 61*mu + 25, -7*mu^2 + 60*mu - 16], 3: [mu, mu^2 - 4*mu + 4, -mu^2 + 3*mu + 1], 33: [mu, 3*mu^2 - 17*mu + 10, -3*mu^2 + 16*mu - 4], 4: [mu, mu^2 - 5*mu + 7, -mu^2 + 4*mu], 5: [mu, 7/55*mu^2 - 47/11*mu + 182/5, -7/55*mu^2 + 36/11*mu + 28/5], 55: [mu, 19/5*mu^2 - 236*mu + 1344/5, -19/5*mu^2 + 235*mu - 1029/5], 555: [mu,  193/1661*mu^2 - 40053/1661*mu + 409822/1661,  -193/1661*mu^2 + 38392/1661*mu - 61012/1661], 5555: [mu, mu^2 - 11*mu + 18, -mu^2 + 10*mu - 6], 6: [mu, 7/44*mu^2 - 171/44*mu + 239/11, -7/44*mu^2 + 127/44*mu + 80/11], 66: [mu, 3/8*mu^2 - 55/8*mu + 61/2, -3/8*mu^2 + 47/8*mu - 1/2], 666: [mu, 7/4*mu^2 - 215/4*mu + 292, -7/4*mu^2 + 211/4*mu - 255], 6666: [mu, 7/4*mu^2 - 131/4*mu + 53/2, -7/4*mu^2 + 127/4*mu - 15/2], 66666: [mu, 1/2*mu^2 - 9/2*mu + 8, -1/2*mu^2 + 7/2*mu + 2], 7: [mu, 3/4*mu^2 - 35/4*mu + 16, -3/4*mu^2 + 31/4*mu + 5], 77: [mu, 1/2*mu^2 - 9/2*mu + 10, -1/2*mu^2 + 7/2*mu + 1], 8: [mu, 1/8*mu^2 - 33/8*mu + 35, -1/8*mu^2 + 25/8*mu + 7], 88: [mu, 1/4*mu^2 - 29/4*mu + 57, -1/4*mu^2 + 25/4*mu - 12], 888: [mu,  19/124*mu^2 - 823/124*mu + 1219/31,  -19/124*mu^2 + 699/124*mu + 176/31], 8888: [mu, 13/2*mu^2 - 411/2*mu + 302, -13/2*mu^2 + 409/2*mu - 269], 88888: [mu, 1/2*mu^2 - 11/2*mu + 11, -1/2*mu^2 + 9/2*mu + 1], 9: [mu, 3/10*mu^2 - 5*mu + 74/5, -3/10*mu^2 + 4*mu + 16/5], 99: [mu, 1/2*mu^2 - 8*mu + 32, -1/2*mu^2 + 7*mu - 12], 999: [mu, mu^2 - 6*mu + 8, -mu^2 + 5*mu - 1], 10: [mu, 3/35*mu^2 - 5*mu + 259/5, -3/35*mu^2 + 4*mu + 56/5], 1010: [mu, 1/7*mu^2 - 8*mu + 112, -1/7*mu^2 + 7*mu - 42], 1011: [mu, mu^2 - 6*mu + 8, -mu^2 + 5*mu - 1], 221: [mu, 1/7*mu^2 - 4*mu + 28, -1/7*mu^2 + 3*mu + 14], 2211: [mu, mu^2 - 4*mu + 4, -mu^2 + 3*mu + 2], 23: [mu,  97/9135*mu^2 - 3188/261*mu + 158284/145,  -97/9135*mu^2 + 2927/261*mu + 10206/145], 233: [mu, 1/25*mu^2 - 97/25*mu + 91, -1/25*mu^2 + 72/25*mu + 56], 2333: [mu, 1/3*mu^2 - 19/3*mu + 18, -1/3*mu^2 + 16/3*mu + 2], 25: [mu,  13/1197*mu^2 - 631/171*mu + 5845/19,  -13/1197*mu^2 + 460/171*mu + 2268/19], 255: [mu, 1/9*mu^2 - 41/9*mu + 427/9, -1/9*mu^2 + 32/9*mu + 140/9], 2555: [mu,  31/297*mu^2 - 2080/297*mu + 2128/33,  -31/297*mu^2 + 1783/297*mu + 182/33], 25555: [mu,  109/1341*mu^2 - 12745/1341*mu + 16331/149,  -109/1341*mu^2 + 11404/1341*mu + 1400/149], 255555: [mu, 1/3*mu^2 - 14/3*mu + 14, -1/3*mu^2 + 11/3*mu + 2], 26: [mu,  37/3843*mu^2 - 3316/549*mu + 34468/61,  -37/3843*mu^2 + 2767/549*mu + 5670/61], 266: [mu,  31/207*mu^2 - 2623/207*mu + 3213/23,  -31/207*mu^2 + 2416/207*mu - 1120/23], 2666: [mu, 1/3*mu^2 - 64/3*mu + 364, -1/3*mu^2 + 61/3*mu - 266], 26666: [mu, 1/3*mu^2 - 17/3*mu + 19, -1/3*mu^2 + 14/3*mu], 27: [mu, 1/11*mu^2 - 96/11*mu + 980/11, -1/11*mu^2 + 85/11*mu + 98/11], 277: [mu, 1/7*mu^2 - 8*mu + 112, -1/7*mu^2 + 7*mu - 21], 2777: [mu, mu^2 - 7*mu + 10, -mu^2 + 6*mu - 2], 28: [mu, 1/9*mu^2 - 181/9*mu + 343, -1/9*mu^2 + 172/9*mu], 288: [mu, 1/3*mu^2 - 4*mu + 32/3, -1/3*mu^2 + 3*mu + 10/3], 2888: [mu, 1/3*mu^2 - 14/3*mu + 16, -1/3*mu^2 + 11/3*mu + 1], 29: [mu, 3/40*mu^2 - 5*mu + 296/5, -3/40*mu^2 + 4*mu + 64/5], 28888: [mu, 1/3*mu^2 - 11/3*mu + 10, -1/3*mu^2 + 8/3*mu + 6], 299: [mu, 3/10*mu^2 - 5*mu + 74/5, -3/10*mu^2 + 4*mu + 16/5], 2999: [mu, 1/2*mu^2 - 8*mu + 32, -1/2*mu^2 + 7*mu - 12], 29999: [mu, mu^2 - 6*mu + 8, -mu^2 + 5*mu - 1], 210: [mu, 1/8*mu^2 - 4*mu + 32, -1/8*mu^2 + 3*mu + 8], 2102: [mu, 1/2*mu^2 - 4*mu + 8, -1/2*mu^2 + 3*mu + 2], 2103: [mu, 3/2*mu^2 - 17*mu + 20, -3/2*mu^2 + 16*mu - 8], 2104: [mu, 7/26*mu^2 - 5*mu + 212/13, -7/26*mu^2 + 4*mu + 48/13], 2105: [mu, 13/58*mu^2 - 160/29*mu + 624/29, -13/58*mu^2 + 131/29*mu + 130/29], 2106: [mu, 37/26*mu^2 - 48*mu + 584/13, -37/26*mu^2 + 47*mu - 142/13], 2107: [mu, 1/2*mu^2 - 12*mu + 80, -1/2*mu^2 + 11*mu - 46], 2108: [mu, 1/8*mu^2 - 7/2*mu + 49/2, -1/8*mu^2 + 5/2*mu + 27/2], 2109: [mu, 3/26*mu^2 - 53/13*mu + 434/13, -3/26*mu^2 + 40/13*mu + 112/13], 21010: [mu, 3/8*mu^2 - 17*mu + 80, -3/8*mu^2 + 16*mu - 32], 21011: [mu, mu^2 - 4*mu + 4, -mu^2 + 3*mu + 1], 211: [mu, 3/32*mu^2 - 35/4*mu + 128, -3/32*mu^2 + 31/4*mu + 40], 2112: [mu, 3/8*mu^2 - 35/4*mu + 32, -3/8*mu^2 + 31/4*mu + 10], 2113: [mu, 3/4*mu^2 - 35/4*mu + 23/2, -3/4*mu^2 + 31/4*mu + 1/2], 2114: [mu, 1/2*mu^2 - 9/2*mu + 11, -1/2*mu^2 + 7/2*mu + 2], 212: [mu, 1/11*mu^2 - 4*mu + 44, -1/11*mu^2 + 3*mu + 11], 2122: [mu, mu^2 - 4*mu + 4, -mu^2 + 3*mu + 1], 213: [mu, 7/484*mu^2 - 171/44*mu + 239, -7/484*mu^2 + 127/44*mu + 80], 2133: [mu, 1/2*mu^2 - 9/2*mu + 8, -1/2*mu^2 + 7/2*mu + 2], 214: [mu, 7/121*mu^2 - 96/11*mu + 140, -7/121*mu^2 + 85/11*mu + 14], 2144: [mu, mu^2 - 7*mu + 10, -mu^2 + 6*mu - 2], 215: [mu, 13/7*mu^2 - 236/7*mu + 304/7, -13/7*mu^2 + 229/7*mu - 171/7], 2155: [mu, mu^2 - 7*mu + 10, -mu^2 + 6*mu - 2], 216: [mu, 1/19*mu^2 - 4*mu + 76, -1/19*mu^2 + 3*mu + 38], 2166: [mu, mu^2 - 4*mu + 4, -mu^2 + 3*mu + 2], 217: [mu,  103/10564*mu^2 - 14491/556*mu + 363565/139,  -103/10564*mu^2 + 13935/556*mu + 8816/139], 2177: [mu,  19/416*mu^2 - 1629/416*mu + 703/8,  -19/416*mu^2 + 1213/416*mu + 209/8], 21777: [mu,  49/64*mu^2 - 8207/64*mu + 9633/16,  -49/64*mu^2 + 8143/64*mu - 6897/16], 217777: [mu,  43/1024*mu^2 - 6265/1024*mu + 3211/16,  -43/1024*mu^2 + 5241/1024*mu - 475/16], 2177777: [mu, 1/2*mu^2 - 17/2*mu + 20, -1/2*mu^2 + 15/2*mu - 2], 218: [mu,  43/28044*mu^2 - 6667/1476*mu + 123120/41,  -43/28044*mu^2 + 5191/1476*mu + 17879/41], 2188: [mu, 1/6*mu^2 - 7/2*mu + 55/3, -1/6*mu^2 + 5/2*mu + 29/3], 21888: [mu, 1/6*mu^2 - 23/6*mu + 22, -1/6*mu^2 + 17/6*mu + 7], 218888: [mu, 3/4*mu^2 - 89/4*mu + 34, -3/4*mu^2 + 85/4*mu - 4], 2188888: [mu, 3/4*mu^2 - 89/4*mu + 95/2, -3/4*mu^2 + 85/4*mu + 19/2],219: [mu,  7/1892*mu^2 - 171/44*mu + 10277/11,  -7/1892*mu^2 + 127/44*mu + 3440/11], 2199: [mu, 1/2*mu^2 - 9/2*mu + 8, -1/2*mu^2 + 7/2*mu + 2], 220: [mu, 7/3015*mu^2 - 41/9*mu + 10854/5, -7/3015*mu^2 + 32/9*mu + 4556/5], 2200: [mu, 1/3*mu^2 - 13/3*mu + 14, -1/3*mu^2 + 10/3*mu + 2], 2201: [mu, 3/5*mu^2 - 52/5*mu + 20, -3/5*mu^2 + 47/5*mu - 2], 31: [mu, 3/4*mu^2 - 35/4*mu + 23/2, -3/4*mu^2 + 31/4*mu + 1/2], 311: [mu, 1/2*mu^2 - 9/2*mu + 11, -1/2*mu^2 + 7/2*mu + 2], 32: [mu, 3*mu^2 - 44*mu + 28, -3*mu^2 + 43*mu - 13], 34: [mu, 1/3*mu^2 - 17/3*mu + 26, -1/3*mu^2 + 14/3*mu - 4], 35: [mu, mu^2 - 7*mu + 10, -mu^2 + 6*mu - 2], 36: [mu, 1/3*mu^2 - 4*mu + 32/3, -1/3*mu^2 + 3*mu + 10/3], 37: [mu, mu^2 - 6*mu + 8, -mu^2 + 5*mu + 2], 38: [mu, 3/8*mu^2 - 49/8*mu + 37/2, -3/8*mu^2 + 41/8*mu - 1/2], 388: [mu, 7/4*mu^2 - 145/4*mu + 62, -7/4*mu^2 + 141/4*mu - 40], 39: [mu, mu^2 - 7*mu + 13, -mu^2 + 6*mu - 4], 40: [mu, mu^2 - 9*mu + 14, -mu^2 + 8*mu - 4], 41: [mu, mu^2 - 9*mu + 19, -mu^2 + 8*mu - 8], 42: [mu, 3/4*mu^2 - 35/4*mu + 23/2, -3/4*mu^2 + 31/4*mu + 1/2], 422: [mu, 1/2*mu^2 - 9/2*mu + 11, -1/2*mu^2 + 7/2*mu + 2], 43: [mu], 45: [mu], 46: [mu], 47: [mu], 48: [mu], 488: [mu], 49: [mu], 50: [mu], 51: [mu], 52: [mu], 53: [mu], 54: [mu], 56: [mu], 57: [mu], 58: [mu], 59: [mu], 599: [mu], 5999: [mu], 60: [mu], 600: [mu], 6000: [mu], 61: [mu], 62: [mu], 622: [mu], 63: [mu], 633: [mu], 6333: [mu], 64: [mu], 644: [mu], 65: [mu], 655: [mu], 67: [mu], 68: [mu], 688: [mu], 69: [mu], 699: [mu], 70: [mu], 700: [mu], 71: [mu], 711: [mu], 712: [mu], 713: [mu], 72: [mu], 722: [mu], 73: [mu], 733: [mu], 7333: [mu], 74: [mu], 744: [mu]}


#--------------------------------------------------------------------------------------------------------------------------------------------------
# To find the above, use Sage:
# Fields = {1: [13, 50, 49], 2: [6, 9, 1], 22: [9, 6, 1], 3: [5, 6, 1 ], 33: [6, 5, 1 ], 4: [7, 14, 7], 5: [42, 441, 847], 55: [63, 126, 63], 555: [210, 2541, 4375], 5555: [12, 27, 15], 6: [29, 180, 64], 66: [30, 257, 484], 666: [37, 356, 1024], 6666: [19, 20, 4], 66666: [10, 19, 2], 7: [21, 116, 64], 77: [11, 30, 16], 8: [42, 441, 784], 88: [45, 612, 2304], 888: [45, 276, 64], 8888: [33, 90, 64], 88888: [12, 27, 8], 9: [18, 56, 8 ], 99: [20, 116, 200 ], 999: [7, 12, 5 ], 10: [63, 686, 343 ], 1010: [70, 1421, 8575], 1011: [7, 12, 5 ], 221: [42, 441, 343], 2211: [6,9,1], 23: [1162, 106281, 250047], 233: [147, 5250, 4375], 2333: [20, 61, 15], 25: [427, 41454, 250047], 255: [63, 1050, 2527], 2555: [70, 693, 567], 25555: [119, 1414, 567], 255555: [16, 55, 27], 26: [658, 63945, 250047], 266: [91, 1386, 5103], 2666: [98, 3157, 33327], 26666: [19, 76, 57], 27: [98, 1029, 343], 277: [91, 2450, 16807], 2777: [8, 15, 7], 28: [343, 30870, 250047], 288: [14, 41, 7], 2888: [17, 72, 63], 28888: [16, 61, 3], 29: [72, 896, 512], 299: [18, 56, 8], 2999: [20, 116, 200], 29999: [7, 12, 5], 210: [40, 384, 512], 2102: [10, 24, 8], 2103: [12, 20, 8], 2104: [20, 68, 8], 2105: [26, 104, 8], 2106: [34, 40, 8], 2107: [34, 376, 1352], 2108: [38, 332, 8], 2109: [42, 392, 392], 21010: [48, 320, 512], 21011: [5, 6, 1], 211: [168, 7424, 32768], 2112: [42, 464, 512] , 2113: [12,17,2], 2114: [13,46,32], 212: [55, 726, 1331], 2122: [5, 6, 1], 213: [319, 21780, 85184], 2133: [10, 19, 2], 214: [154, 2541, 1331], 2144: [8, 15, 7], 215: [19, 38, 19], 2155: [8, 15, 7], 216: [114, 3249, 6859], 2166: [6,9,1], 217: [2679, 272916, 438976], 2177: [114, 3249, 12844], 21777: [171, 1368, 2736], 217777: [171, 7296, 77824], 2177777: [18, 51, 26], 218: [3439, 2664180, 320013504], 2188: [28, 179, 8], 21888: [29, 198, 144], 218888: [30, 53, 12], 2188888:[57, 836, 684], 219: [1247, 332820, 5088448], 2199: [10, 19, 2], 220: [3082, 2464461, 219256227], 2200 :[16, 63, 45], 2201: [18, 41, 15], 31: [12, 17, 2], 311: [13, 46, 32], 32: [15, 14, 3], 34: [22, 139, 243], 35: [8, 15, 7], 36: [14, 41, 7], 37: [10, 27, 11], 38: [18, 65, 44], 388: [22, 61, 44], 39: [9, 24, 19], 40: [10, 21, 11], 41: [11, 34, 31], 42: [12, 17, 2], 422: [13, 46, 32], 43: [7, 10, 2], 45: [8, 12, 3], 46: [9, 16, 2], 47: [9, 14, 4], 48: [9, 17, 8], 488: [15, 11, 2], 49: [9, 19, 7], 50: [9, 21, 8], 51: [10, 17, 3], 52: [10, 17, 7], 53: [10, 21, 3], 54: [10, 29, 23], 56: [11, 14, 3], 57:[10,21,4], 58:[14,43,36], 59:[21,60,4], 599:[23,79,9], 5999:[32,182,196], 60:[23,112,36], 600:[26,162,36], 6000:[26,187,324], 61:[26,177,128], 62:[29,246,512], 622:[15,34,8], 63:[29,226,252], 64:[30,169,200], 644:[44,530,1800], 65:[33,342,1116], 655:[12,36,31], 67:[20,16,3], 68:[1027,4795,25], 688:[30,208,400], 69:[1768,19893,18], 699:[48,295,18], 70:[4332,164512,12167], 700:[45,213,92], 71:[28,180,144],711:[34,261,576],712:[36,196,144],713:[39,319,729],72:[53,761,1692],722:[54,846,3807],73:[389,179,7],733:[53,732,1008],7333:[58,980,4032],74:[52,704,847],744:[59,970,3388]}

#all_roots = {}
#for f in Fields:
#	Roots = []
#	A = Fields[f][0]
#	B = Fields[f][1]
#	C = Fields[f][2]
#	g=x^3-A*x^2+B*x-C
#	K.<mu> = NumberField(g)
#	S.<t>=PolynomialRing(K)
#	g=t^3-A*t^2+B*t-C
#	for r in [0..len(g.roots())-1]:
#		Roots.append(g.roots()[r][0])
#	f, Roots   
#	all_roots[f] = Roots 

