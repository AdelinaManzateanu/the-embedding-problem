Authors: Sorina Ionica, Pınar Kılıçer, Kristin Lauter, Elisa Lorenzo Garcia, Adelina Mânzățeanu and Christelle Vincent.

This explains how to run the algorithm in "DETERMINING THE PRIMES OF BAD REDUCTION OF CM CURVES OF GENUS 3" for a CM field that is not already on the list CM_Fields.sage.

1. Modify the file CM_Fields.sage and add a new CM field written in the form x^6 + A*x^4 + B*x^2 + C. If the CM field contain an imaginary quadratic subfield, also define D. Note: D corresponds to -D in the paper. Ensure you choose a CM field number that is not already in use.

2. Modify Find_solutions_Step2.sage

Explanation: How to find N?
Magma
A:=42; B:=441; C:=847; // modify this accordingly
R<x>:=PolynomialRing(Rationals());
f:=x^3-A*x^2+B*x-C; 
K<U>:=NumberField(f);
OK := MaximalOrder(K); O:= EquationOrder(K);
Basis(OK, NumberField(OK)); // this gives N

3. If at Step 4, there are solutions for a primes p > 1000, then the bases of maximal orders in the quaternion algebra corresponding to that prime might not be in the table BasesForPrimesTable.csv. Thus, they need to be added. Optionally, also modify the file GoodNorms.sage 
If at Step 4 there are solutions for a certain prime p = 1 mod 8, then one needs to choose q to be = 3 mod 4 and not a square mod p. If for the choice of q, the bases of the maximal orders of QA(-q,-p) are not in BasesForPrimesTable.csv, then then need to be added.

To find the basis for the maximal order, use Magma. For example,
p := 17;
q := 3;
Q := RationalField();
A<i,j,k>:=QuaternionAlgebra<Q|-q,-p>; #change this accordingly
CC:=ConjugacyClasses(MaximalOrder(A));
#CC;
for G in CC do
    Generators(G);
end for;


4. 

If the CM field contains an imaginary quadratic subfield:

Modify the file Find_solutions_Step8v2Table.sage.

Explanation on how to express Lambda2 in terms of Lambda1 and Lambda3 (Magma):
Example given: CM55 where sextic is of the form x^6 + Ax^4 + Bx^2 + C and CM5555 where sextic is NOT of the form x^6 + Ax^4 + Bx^2 + C:
//CM55
k<x>:=PolynomialRing(Rationals());
A := 63; B := 126; C := 63; D:=7;
f := x^6 + A*x^4 + B*x^2 + C;
g := x^3 - A*x^2 + B*x - C;
h := x^2+D;
L<Lambda2> := NumberField(f);
F<Lambda1,Lambda3>:=NumberField([g,h]);
y, z :=IsIsomorphic(F,L);
y; //true
z(Lambda1); //-Lambda2^2
z(Lambda3); //1/3*(Lambda2^5 + 62*Lambda2^3 + 63*Lambda2)
y, z :=IsIsomorphic(L,F);
y; //true
z(Lambda2); // 17/105*Lambda3*Lambda1^2 - 10*Lambda3*Lambda1 + 42/5*Lambda3 // THIS IS THE EXPRESSION WE NEED, but with Lambda1 := -MLambda1.
//CM5555
A2 := 12; B2 := 27; C2 := 15;//1, 1
f2 := x^6 + A2*x^4 + B2*x^2 + C2;
g2 := x^3 - A2*x^2 + B2*x - C2;
L2<v> := NumberField(f2);
F2<Lambda1,Lambda3>:=NumberField([g2,h]);
IsIsomorphic(F2,L2); // false. Thus, sextic is NOT of the form x^6 + Ax^4 + Bx^2 + C. So we need to use L, i.e. CM55.
y, z :=IsIsomorphic(F2,L);
y; //true
z(Lambda1); // 1/15*(Lambda2^4 + 60*Lambda2^2 + 81)
z(Lambda3); // 1/3*(Lambda2^5 + 62*Lambda2^3 + 63*Lambda2)
y, z :=IsIsomorphic(L,F2);
y; //true
z(Lambda2); //-2/7*Lambda3*Lambda1^2 + 23/7*Lambda3*Lambda1 - 39/7*Lambda3 // THIS IS THE EXPRESSION WE NEED, but with Lambda1 := -MLambda1.
################################################################################
Explanation on how to find the basis (Magma):
Choose A,B,C below such that sextic is of the form x^6+A*x^4+B*x^2+C. So for CM5555, choose A,B,C as for CM55 if Lambda2 was computed using CM55.
A := 63; B := 126; C := 63; //Modify accordingly. 
R<x>:=PolynomialRing(Rationals());
f:=x^6+A*x^4+B*x^2+C;
K<Lambda2>:=NumberField(f);
OK := MaximalOrder(K); O:= EquationOrder(K);
Basis(OK, NumberField(OK));

If the CM field does NOT contain an imaginary quadratic subfield:

Modify the file Find_solutions_Step7xTable.sage.

Explanation on how to find the basis (Magma):
Choose A,B,C below such that sextic is of the form x^6+A*x^4+B*x^2+C. So for CM5555, choose A,B,C as for CM55 if Lambda2 was computed using CM55.
A := 63; B := 126; C := 63; //Modify accordingly. 
R<x>:=PolynomialRing(Rationals());
f:=x^6+A*x^4+B*x^2+C;
K<Lambda2>:=NumberField(f);
OK := MaximalOrder(K); O:= EquationOrder(K);
Basis(OK, NumberField(OK));

5. Modify the file All_Roots. To find the roots for the new CM field, use the Sage code below. Fields is the dictionary of implemented CM fields given by certain [A,B,C]. Add the new CM field to the dictionary Fields and run the code. Update the All_Roots file.

Fields = {1: [13, 50, 49], 2: [6, 9, 1], 22: [9, 6, 1], 3: [5, 6, 1 ], 33: [6, 5, 1 ], 4: [7, 14, 7], 5: [42, 441, 847], 55: [63, 126, 63], 555: [210, 2541, 4375], 5555: [12, 27, 15], 6: [29, 180, 64], 66: [30, 257, 484], 666: [37, 356, 1024], 6666: [19, 20, 4], 66666: [10, 19, 2], 7: [21, 116, 64], 77: [11, 30, 16], 8: [42, 441, 784], 88: [45, 612, 2304], 888: [45, 276, 64], 8888: [33, 90, 64], 88888: [12, 27, 8], 9: [18, 56, 8 ], 99: [20, 116, 200 ], 999: [7, 12, 5 ], 10: [63, 686, 343 ], 1010: [70, 1421, 8575], 1011: [7, 12, 5 ], 221: [42, 441, 343], 2211: [6,9,1], 23: [1162, 106281, 250047], 233: [147, 5250, 4375], 2333: [20, 61, 15], 25: [427, 41454, 250047], 255: [63, 1050, 2527], 2555: [70, 693, 567], 25555: [119, 1414, 567], 255555: [16, 55, 27], 26: [658, 63945, 250047], 266: [91, 1386, 5103], 2666: [98, 3157, 33327], 26666: [19, 76, 57], 27: [98, 1029, 343], 277: [91, 2450, 16807], 2777: [8, 15, 7], 28: [343, 30870, 250047], 288: [14, 41, 7], 2888: [17, 72, 63], 28888: [16, 61, 3], 29: [72, 896, 512], 299: [18, 56, 8], 2999: [20, 116, 200], 29999: [7, 12, 5], 210: [40, 384, 512], 2102: [10, 24, 8], 2103: [12, 20, 8], 2104: [20, 68, 8], 2105: [26, 104, 8], 2106: [34, 40, 8], 2107: [34, 376, 1352], 2108: [38, 332, 8], 2109: [42, 392, 392], 21010: [48, 320, 512], 21011: [5, 6, 1], 211: [168, 7424, 32768], 2112: [42, 464, 512] , 2113: [12,17,2], 2114: [13,46,32], 212: [55, 726, 1331], 2122: [5, 6, 1], 213: [319, 21780, 85184], 2133: [10, 19, 2], 214: [154, 2541, 1331], 2144: [8, 15, 7], 215: [19, 38, 19], 2155: [8, 15, 7], 216: [114, 3249, 6859], 2166: [6,9,1], 217: [2679, 272916, 438976], 2177: [114, 3249, 12844], 21777: [171, 1368, 2736], 217777: [171, 7296, 77824], 2177777: [18, 51, 26], 218: [3439, 2664180, 320013504], 2188: [28, 179, 8], 21888: [29, 198, 144], 218888: [30, 53, 12], 2188888:[57, 836, 684], 219: [1247, 332820, 5088448], 2199: [10, 19, 2], 220: [3082, 2464461, 219256227], 2200 :[16, 63, 45], 2201: [18, 41, 15], 31: [12, 17, 2], 311: [13, 46, 32], 32: [15, 14, 3], 34: [22, 139, 243], 35: [8, 15, 7], 36: [14, 41, 7], 37: [10, 27, 11], 38: [18, 65, 44], 388: [22, 61, 44], 39: [9, 24, 19], 40: [10, 21, 11], 41: [11, 34, 31], 42: [12, 17, 2], 422: [13, 46, 32], 43: [7, 10, 2], 45: [8, 12, 3], 46: [9, 16, 2], 47: [9, 14, 4], 48: [9, 17, 8], 488: [15, 11, 2], 49: [9, 19, 7], 50: [9, 21, 8], 51: [10, 17, 3], 52: [10, 17, 7], 53: [10, 21, 3], 54: [10, 29, 23], 56: [11, 14, 3], 57:[10,21,4], 58:[14,43,36], 59:[21,60,4], 599:[23,79,9], 5999:[32,182,196], 60:[23,112,36], 600:[26,162,36], 6000:[26,187,324], 61:[26,177,128], 62:[29,246,512], 622:[15,34,8], 63:[29,226,252], 64:[30,169,200], 644:[44,530,1800], 65:[33,342,1116], 655:[12,36,31], 67:[20,16,3], 68:[1027,4795,25], 688:[30,208,400], 69:[1768,19893,18], 699:[48,295,18], 70:[4332,164512,12167], 700:[45,213,92], 71:[28,180,144],711:[34,261,576],712:[36,196,144],713:[39,319,729],72:[53,761,1692],722:[54,846,3807],73:[389,179,7],733:[53,732,1008],7333:[58,980,4032],74:[52,704,847],744:[59,970,3388]}

all_roots = {}
for f in Fields:
   Roots = []
   A = Fields[f][0]
   B = Fields[f][1]
   C = Fields[f][2]
   g=x^3-A*x^2+B*x-C
   K.<mu> = NumberField(g)
   S.<t>=PolynomialRing(K)
   g=t^3-A*t^2+B*t-C
   for r in [0..len(g.roots())-1]:
       Roots.append(g.roots()[r][0])
   f, Roots   
   all_roots[f] = Roots 
