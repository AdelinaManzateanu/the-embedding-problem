sets of equivalent solutions: 
[[4, 8, 14, -9, 91, 602, 147, i - j - k, (-4)*i + 4*j + 2*k, (-20)*i + 23*j + 10*k, (-4)*i + 15/7*j + 2*k, 83/7*i + (-7)*j + (-45/7)*k, 472/7*i + (-35)*j + (-236/7)*k, 4/7*i + (-2/7)*j + (-2/7)*k, (-12/7)*i + j + 6/7*k, (-69/7)*i + 5*j + 31/7*k], [4, 8, 14, -9, 91, 602, 147, -i - j - k, 4*i + 4*j + 2*k, 20*i + 23*j + 10*k, 4*i + 15/7*j + 2*k, (-83/7)*i + (-7)*j + (-45/7)*k, (-472/7)*i + (-35)*j + (-236/7)*k, (-4/7)*i + (-2/7)*j + (-2/7)*k, 12/7*i + j + 6/7*k, 69/7*i + 5*j + 31/7*k], [4, 8, 14, -9, 91, 602, 147, -i - j + k, 4*i + 4*j + (-2)*k, 20*i + 23*j + (-10)*k, 4*i + 15/7*j + (-2)*k, (-83/7)*i + (-7)*j + 45/7*k, (-472/7)*i + (-35)*j + 236/7*k, (-4/7)*i + (-2/7)*j + 2/7*k, 12/7*i + j + (-6/7)*k, 69/7*i + 5*j + (-31/7)*k], [4, 8, 14, -9, 91, 602, 147, i - j + k, (-4)*i + 4*j + (-2)*k, (-20)*i + 23*j + (-10)*k, (-4)*i + 15/7*j + (-2)*k, 83/7*i + (-7)*j + 45/7*k, 472/7*i + (-35)*j + 236/7*k, 4/7*i + (-2/7)*j + 2/7*k, (-12/7)*i + j + (-6/7)*k, (-69/7)*i + 5*j + (-31/7)*k], [4, 8, 14, -9, 91, 602, 147, i + j - k, (-4)*i + (-4)*j + 2*k, (-20)*i + (-23)*j + 10*k, (-4)*i + (-15/7)*j + 2*k, 83/7*i + 7*j + (-45/7)*k, 472/7*i + 35*j + (-236/7)*k, 4/7*i + 2/7*j + (-2/7)*k, (-12/7)*i - j + 6/7*k, (-69/7)*i + (-5)*j + 31/7*k], [4, 8, 14, -9, 91, 602, 147, -i + j - k, 4*i + (-4)*j + 2*k, 20*i + (-23)*j + 10*k, 4*i + (-15/7)*j + 2*k, (-83/7)*i + 7*j + (-45/7)*k, (-472/7)*i + 35*j + (-236/7)*k, (-4/7)*i + 2/7*j + (-2/7)*k, 12/7*i - j + 6/7*k, 69/7*i + (-5)*j + 31/7*k], [4, 8, 14, -9, 91, 602, 147, -i + j + k, 4*i + (-4)*j + (-2)*k, 20*i + (-23)*j + (-10)*k, 4*i + (-15/7)*j + (-2)*k, (-83/7)*i + 7*j + 45/7*k, (-472/7)*i + 35*j + 236/7*k, (-4/7)*i + 2/7*j + 2/7*k, 12/7*i - j + (-6/7)*k, 69/7*i + (-5)*j + (-31/7)*k], [4, 8, 14, -9, 91, 602, 147, i + j + k, (-4)*i + (-4)*j + (-2)*k, (-20)*i + (-23)*j + (-10)*k, (-4)*i + (-15/7)*j + (-2)*k, 83/7*i + 7*j + 45/7*k, 472/7*i + 35*j + 236/7*k, 4/7*i + 2/7*j + 2/7*k, (-12/7)*i - j + (-6/7)*k, (-69/7)*i + (-5)*j + (-31/7)*k]],
[[4, 8, 14, -9, 91, 602, 147, 2*i - j, (-5)*i + 4*j + k, (-25)*i + 23*j + 5*k, (-5)*i + 15/7*j + k, 109/7*i + (-7)*j + (-19/7)*k, 590/7*i + (-35)*j + (-118/7)*k, 5/7*i + (-2/7)*j + (-1/7)*k, (-15/7)*i + j + 3/7*k, (-81/7)*i + 5*j + 19/7*k], [4, 8, 14, -9, 91, 602, 147, (-2)*i - j, 5*i + 4*j + k, 25*i + 23*j + 5*k, 5*i + 15/7*j + k, (-109/7)*i + (-7)*j + (-19/7)*k, (-590/7)*i + (-35)*j + (-118/7)*k, (-5/7)*i + (-2/7)*j + (-1/7)*k, 15/7*i + j + 3/7*k, 81/7*i + 5*j + 19/7*k], [4, 8, 14, -9, 91, 602, 147, (-2)*i - j, 5*i + 4*j - k, 25*i + 23*j + (-5)*k, 5*i + 15/7*j - k, (-109/7)*i + (-7)*j + 19/7*k, (-590/7)*i + (-35)*j + 118/7*k, (-5/7)*i + (-2/7)*j + 1/7*k, 15/7*i + j + (-3/7)*k, 81/7*i + 5*j + (-19/7)*k], [4, 8, 14, -9, 91, 602, 147, 2*i - j, (-5)*i + 4*j - k, (-25)*i + 23*j + (-5)*k, (-5)*i + 15/7*j - k, 109/7*i + (-7)*j + 19/7*k, 590/7*i + (-35)*j + 118/7*k, 5/7*i + (-2/7)*j + 1/7*k, (-15/7)*i + j + (-3/7)*k, (-81/7)*i + 5*j + (-19/7)*k], [4, 8, 14, -9, 91, 602, 147, 2*i + j, (-5)*i + (-4)*j + k, (-25)*i + (-23)*j + 5*k, (-5)*i + (-15/7)*j + k, 109/7*i + 7*j + (-19/7)*k, 590/7*i + 35*j + (-118/7)*k, 5/7*i + 2/7*j + (-1/7)*k, (-15/7)*i - j + 3/7*k, (-81/7)*i + (-5)*j + 19/7*k], [4, 8, 14, -9, 91, 602, 147, (-2)*i + j, 5*i + (-4)*j + k, 25*i + (-23)*j + 5*k, 5*i + (-15/7)*j + k, (-109/7)*i + 7*j + (-19/7)*k, (-590/7)*i + 35*j + (-118/7)*k, (-5/7)*i + 2/7*j + (-1/7)*k, 15/7*i - j + 3/7*k, 81/7*i + (-5)*j + 19/7*k], [4, 8, 14, -9, 91, 602, 147, (-2)*i + j, 5*i + (-4)*j - k, 25*i + (-23)*j + (-5)*k, 5*i + (-15/7)*j - k, (-109/7)*i + 7*j + 19/7*k, (-590/7)*i + 35*j + 118/7*k, (-5/7)*i + 2/7*j + 1/7*k, 15/7*i - j + (-3/7)*k, 81/7*i + (-5)*j + (-19/7)*k], [4, 8, 14, -9, 91, 602, 147, 2*i + j, (-5)*i + (-4)*j - k, (-25)*i + (-23)*j + (-5)*k, (-5)*i + (-15/7)*j - k, 109/7*i + 7*j + 19/7*k, 590/7*i + 35*j + 118/7*k, 5/7*i + 2/7*j + 1/7*k, (-15/7)*i - j + (-3/7)*k, (-81/7)*i + (-5)*j + (-19/7)*k]],
[[4, 8, 14, -9, 91, 602, 147, i - j + k, -i + 4*j + (-3)*k, (-5)*i + 23*j + (-15)*k, -i + 15/7*j + (-3)*k, 26/7*i + (-7)*j + 64/7*k, 118/7*i + (-35)*j + 354/7*k, 1/7*i + (-2/7)*j + 3/7*k, (-3/7)*i + j + (-9/7)*k, (-12/7)*i + 5*j + (-50/7)*k], [4, 8, 14, -9, 91, 602, 147, -i - j + k, i + 4*j + (-3)*k, 5*i + 23*j + (-15)*k, i + 15/7*j + (-3)*k, (-26/7)*i + (-7)*j + 64/7*k, (-118/7)*i + (-35)*j + 354/7*k, (-1/7)*i + (-2/7)*j + 3/7*k, 3/7*i + j + (-9/7)*k, 12/7*i + 5*j + (-50/7)*k], [4, 8, 14, -9, 91, 602, 147, -i - j - k, i + 4*j + 3*k, 5*i + 23*j + 15*k, i + 15/7*j + 3*k, (-26/7)*i + (-7)*j + (-64/7)*k, (-118/7)*i + (-35)*j + (-354/7)*k, (-1/7)*i + (-2/7)*j + (-3/7)*k, 3/7*i + j + 9/7*k, 12/7*i + 5*j + 50/7*k], [4, 8, 14, -9, 91, 602, 147, i - j - k, -i + 4*j + 3*k, (-5)*i + 23*j + 15*k, -i + 15/7*j + 3*k, 26/7*i + (-7)*j + (-64/7)*k, 118/7*i + (-35)*j + (-354/7)*k, 1/7*i + (-2/7)*j + (-3/7)*k, (-3/7)*i + j + 9/7*k, (-12/7)*i + 5*j + 50/7*k], [4, 8, 14, -9, 91, 602, 147, i + j + k, -i + (-4)*j + (-3)*k, (-5)*i + (-23)*j + (-15)*k, -i + (-15/7)*j + (-3)*k, 26/7*i + 7*j + 64/7*k, 118/7*i + 35*j + 354/7*k, 1/7*i + 2/7*j + 3/7*k, (-3/7)*i - j + (-9/7)*k, (-12/7)*i + (-5)*j + (-50/7)*k], [4, 8, 14, -9, 91, 602, 147, -i + j + k, i + (-4)*j + (-3)*k, 5*i + (-23)*j + (-15)*k, i + (-15/7)*j + (-3)*k, (-26/7)*i + 7*j + 64/7*k, (-118/7)*i + 35*j + 354/7*k, (-1/7)*i + 2/7*j + 3/7*k, 3/7*i - j + (-9/7)*k, 12/7*i + (-5)*j + (-50/7)*k], [4, 8, 14, -9, 91, 602, 147, -i + j - k, i + (-4)*j + 3*k, 5*i + (-23)*j + 15*k, i + (-15/7)*j + 3*k, (-26/7)*i + 7*j + (-64/7)*k, (-118/7)*i + 35*j + (-354/7)*k, (-1/7)*i + 2/7*j + (-3/7)*k, 3/7*i - j + 9/7*k, 12/7*i + (-5)*j + 50/7*k], [4, 8, 14, -9, 91, 602, 147, i + j - k, -i + (-4)*j + 3*k, (-5)*i + (-23)*j + 15*k, -i + (-15/7)*j + 3*k, 26/7*i + 7*j + (-64/7)*k, 118/7*i + 35*j + (-354/7)*k, 1/7*i + 2/7*j + (-3/7)*k, (-3/7)*i - j + 9/7*k, (-12/7)*i + (-5)*j + 50/7*k]],
[[4, 8, 14, -9, 91, 602, 147, i + j + k, (-4)*i + (-4)*j + (-4)*k, (-23)*i + (-23)*j + (-23)*k, (-15/7)*i + (-15/7)*j + (-15/7)*k, 7*i + 7*j + 7*k, 35*i + 35*j + 35*k, 2/7*i + 2/7*j + 2/7*k, -i - j - k, (-5)*i + (-5)*j + (-5)*k], [4, 8, 14, -9, 91, 602, 147, -i - j - k, 4*i + 4*j + 4*k, 23*i + 23*j + 23*k, 15/7*i + 15/7*j + 15/7*k, (-7)*i + (-7)*j + (-7)*k, (-35)*i + (-35)*j + (-35)*k, (-2/7)*i + (-2/7)*j + (-2/7)*k, i + j + k, 5*i + 5*j + 5*k], [4, 8, 14, -9, 91, 602, 147, -i + j - k, 4*i + (-4)*j + 4*k, 23*i + (-23)*j + 23*k, 15/7*i + (-15/7)*j + 15/7*k, (-7)*i + 7*j + (-7)*k, (-35)*i + 35*j + (-35)*k, (-2/7)*i + 2/7*j + (-2/7)*k, i - j + k, 5*i + (-5)*j + 5*k], [4, 8, 14, -9, 91, 602, 147, i - j - k, (-4)*i + 4*j + 4*k, (-23)*i + 23*j + 23*k, (-15/7)*i + 15/7*j + 15/7*k, 7*i + (-7)*j + (-7)*k, 35*i + (-35)*j + (-35)*k, 2/7*i + (-2/7)*j + (-2/7)*k, -i + j + k, (-5)*i + 5*j + 5*k], [4, 8, 14, -9, 91, 602, 147, i - j + k, (-4)*i + 4*j + (-4)*k, (-23)*i + 23*j + (-23)*k, (-15/7)*i + 15/7*j + (-15/7)*k, 7*i + (-7)*j + 7*k, 35*i + (-35)*j + 35*k, 2/7*i + (-2/7)*j + 2/7*k, -i + j - k, (-5)*i + 5*j + (-5)*k], [4, 8, 14, -9, 91, 602, 147, -i + j + k, 4*i + (-4)*j + (-4)*k, 23*i + (-23)*j + (-23)*k, 15/7*i + (-15/7)*j + (-15/7)*k, (-7)*i + 7*j + 7*k, (-35)*i + 35*j + 35*k, (-2/7)*i + 2/7*j + 2/7*k, i - j - k, 5*i + (-5)*j + (-5)*k], [4, 8, 14, -9, 91, 602, 147, -i - j + k, 4*i + 4*j + (-4)*k, 23*i + 23*j + (-23)*k, 15/7*i + 15/7*j + (-15/7)*k, (-7)*i + (-7)*j + 7*k, (-35)*i + (-35)*j + 35*k, (-2/7)*i + (-2/7)*j + 2/7*k, i + j - k, 5*i + 5*j + (-5)*k], [4, 8, 14, -9, 91, 602, 147, i + j - k, (-4)*i + (-4)*j + 4*k, (-23)*i + (-23)*j + 23*k, (-15/7)*i + (-15/7)*j + 15/7*k, 7*i + 7*j + (-7)*k, 35*i + 35*j + (-35)*k, 2/7*i + 2/7*j + (-2/7)*k, -i - j + k, (-5)*i + (-5)*j + 5*k]],
[[4, 8, 14, -9, 91, 602, 147, 2*i + j, (-8)*i + (-4)*j, (-46)*i + (-23)*j, (-30/7)*i + (-15/7)*j, 14*i + 7*j, 70*i + 35*j, 4/7*i + 2/7*j, (-2)*i - j, (-10)*i + (-5)*j], [4, 8, 14, -9, 91, 602, 147, (-2)*i + j, 8*i + (-4)*j, 46*i + (-23)*j, 30/7*i + (-15/7)*j, (-14)*i + 7*j, (-70)*i + 35*j, (-4/7)*i + 2/7*j, 2*i - j, 10*i + (-5)*j], [4, 8, 14, -9, 91, 602, 147, (-2)*i - j, 8*i + 4*j, 46*i + 23*j, 30/7*i + 15/7*j, (-14)*i + (-7)*j, (-70)*i + (-35)*j, (-4/7)*i + (-2/7)*j, 2*i + j, 10*i + 5*j], [4, 8, 14, -9, 91, 602, 147, 2*i - j, (-8)*i + 4*j, (-46)*i + 23*j, (-30/7)*i + 15/7*j, 14*i + (-7)*j, 70*i + (-35)*j, 4/7*i + (-2/7)*j, (-2)*i + j, (-10)*i + 5*j]],
